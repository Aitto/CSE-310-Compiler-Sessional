Terminals unused in grammar

   DO
   SWITCH
   CASE
   DEFAULT
   CONTINUE
   BREAK
   BITOP
   STRING
   NEWLINE
   DOUBLE
   CONST_CHAR


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit

    4 unit: var_declaration
    5     | func_declaration
    6     | func_definition

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID LPAREN RPAREN SEMICOLON

    9 $@1: %empty

   10 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 compound_statement

   11 $@2: %empty

   12 func_definition: type_specifier ID LPAREN RPAREN $@2 compound_statement

   13 parameter_list: parameter_list COMMA type_specifier ID
   14               | parameter_list COMMA type_specifier
   15               | type_specifier ID
   16               | type_specifier

   17 $@3: %empty

   18 compound_statement: LCURL $@3 statements RCURL

   19 $@4: %empty

   20 compound_statement: LCURL $@4 RCURL

   21 $@5: %empty

   22 var_declaration: type_specifier declaration_list $@5 SEMICOLON

   23 type_specifier: INT
   24               | FLOAT
   25               | VOID

   26 declaration_list: declaration_list COMMA ID
   27                 | declaration_list COMMA ID LTHIRD CONST_INT RTHIRD
   28                 | ID
   29                 | ID LTHIRD CONST_INT RTHIRD

   30 statements: statement
   31           | statements statement

   32 statement: var_declaration
   33          | expression_statement
   34          | compound_statement
   35          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
   36          | IF LPAREN expression RPAREN statement
   37          | IF LPAREN expression RPAREN statement ELSE statement
   38          | WHILE LPAREN expression RPAREN statement
   39          | PRINTLN LPAREN ID RPAREN SEMICOLON
   40          | RETURN expression SEMICOLON

   41 expression_statement: SEMICOLON
   42                     | expression SEMICOLON

   43 variable: ID
   44         | ID LTHIRD expression RTHIRD

   45 expression: logic_expression
   46           | variable ASSIGNOP logic_expression

   47 logic_expression: rel_expression
   48                 | rel_expression LOGICOP rel_expression

   49 rel_expression: simple_expression
   50               | simple_expression RELOP simple_expression

   51 simple_expression: term
   52                  | simple_expression ADDOP term

   53 term: unary_expression
   54     | term MULOP unary_expression

   55 unary_expression: ADDOP unary_expression
   56                 | NOT unary_expression
   57                 | factor

   58 factor: variable
   59       | ID LPAREN argument_list RPAREN
   60       | LPAREN expression RPAREN
   61       | CONST_INT
   62       | CONST_FLOAT
   63       | variable INCOP
   64       | variable DECOP

   65 argument_list: arguments
   66              | %empty

   67 arguments: arguments COMMA logic_expression
   68          | logic_expression


Terminals, with rules where they appear

$end (0) 0
error (256)
DO (258)
SWITCH (259)
CASE (260)
DEFAULT (261)
CONTINUE (262)
BREAK (263)
DECOP (264) 64
INCOP (265) 63
BITOP (266)
NOT (267) 56
LTHIRD (268) 27 29 44
RTHIRD (269) 27 29 44
COMMA (270) 13 14 26 27 67
STRING (271)
PRINTLN (272) 39
NEWLINE (273)
RETURN (274) 40
ID (275) 7 8 10 12 13 15 26 27 28 29 39 43 44 59
INT (276) 23
FLOAT (277) 24
DOUBLE (278)
VOID (279) 25
CONST_CHAR (280)
CONST_FLOAT (281) 62
CONST_INT (282) 27 29 61
ADDOP (283) 52 55
MULOP (284) 54
RELOP (285) 50
LOGICOP (286) 48
ASSIGNOP (287) 46
SEMICOLON (288) 7 8 22 39 40 41 42
LCURL (289) 18 20
RCURL (290) 18 20
LPAREN (291) 7 8 10 12 35 36 37 38 39 59 60
RPAREN (292) 7 8 10 12 35 36 37 38 39 59 60
IF (293) 36 37
FOR (294) 35
WHILE (295) 38
LOWER_THEN_ELSE (296)
ELSE (297) 37


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
start (44)
    on left: 1, on right: 0
program (45)
    on left: 2 3, on right: 1 2
unit (46)
    on left: 4 5 6, on right: 2 3
func_declaration (47)
    on left: 7 8, on right: 5
func_definition (48)
    on left: 10 12, on right: 6
$@1 (49)
    on left: 9, on right: 10
$@2 (50)
    on left: 11, on right: 12
parameter_list (51)
    on left: 13 14 15 16, on right: 7 10 13 14
compound_statement (52)
    on left: 18 20, on right: 10 12 34
$@3 (53)
    on left: 17, on right: 18
$@4 (54)
    on left: 19, on right: 20
var_declaration (55)
    on left: 22, on right: 4 32
$@5 (56)
    on left: 21, on right: 22
type_specifier (57)
    on left: 23 24 25, on right: 7 8 10 12 13 14 15 16 22
declaration_list (58)
    on left: 26 27 28 29, on right: 22 26 27
statements (59)
    on left: 30 31, on right: 18 31
statement (60)
    on left: 32 33 34 35 36 37 38 39 40, on right: 30 31 35 36 37 38
expression_statement (61)
    on left: 41 42, on right: 33 35
variable (62)
    on left: 43 44, on right: 46 58 63 64
expression (63)
    on left: 45 46, on right: 35 36 37 38 40 42 44 60
logic_expression (64)
    on left: 47 48, on right: 45 46 67 68
rel_expression (65)
    on left: 49 50, on right: 47 48
simple_expression (66)
    on left: 51 52, on right: 49 50 52
term (67)
    on left: 53 54, on right: 51 52 54
unary_expression (68)
    on left: 55 56 57, on right: 53 54 55 56
factor (69)
    on left: 58 59 60 61 62 63 64, on right: 57
argument_list (70)
    on left: 65 66, on right: 59
arguments (71)
    on left: 67 68, on right: 65 67


State 0

    0 $accept: . start $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    start             go to state 4
    program           go to state 5
    unit              go to state 6
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 1

   23 type_specifier: INT .

    $default  reduce using rule 23 (type_specifier)


State 2

   24 type_specifier: FLOAT .

    $default  reduce using rule 24 (type_specifier)


State 3

   25 type_specifier: VOID .

    $default  reduce using rule 25 (type_specifier)


State 4

    0 $accept: start . $end

    $end  shift, and go to state 11


State 5

    1 start: program .
    2 program: program . unit

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (start)

    unit              go to state 12
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 6

    3 program: unit .

    $default  reduce using rule 3 (program)


State 7

    5 unit: func_declaration .

    $default  reduce using rule 5 (unit)


State 8

    6 unit: func_definition .

    $default  reduce using rule 6 (unit)


State 9

    4 unit: var_declaration .

    $default  reduce using rule 4 (unit)


State 10

    7 func_declaration: type_specifier . ID LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier . ID LPAREN RPAREN SEMICOLON
   10 func_definition: type_specifier . ID LPAREN parameter_list RPAREN $@1 compound_statement
   12                | type_specifier . ID LPAREN RPAREN $@2 compound_statement
   22 var_declaration: type_specifier . declaration_list $@5 SEMICOLON

    ID  shift, and go to state 13

    declaration_list  go to state 14


State 11

    0 $accept: start $end .

    $default  accept


State 12

    2 program: program unit .

    $default  reduce using rule 2 (program)


State 13

    7 func_declaration: type_specifier ID . LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID . LPAREN RPAREN SEMICOLON
   10 func_definition: type_specifier ID . LPAREN parameter_list RPAREN $@1 compound_statement
   12                | type_specifier ID . LPAREN RPAREN $@2 compound_statement
   28 declaration_list: ID .
   29                 | ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 15
    LPAREN  shift, and go to state 16

    $default  reduce using rule 28 (declaration_list)


State 14

   22 var_declaration: type_specifier declaration_list . $@5 SEMICOLON
   26 declaration_list: declaration_list . COMMA ID
   27                 | declaration_list . COMMA ID LTHIRD CONST_INT RTHIRD

    COMMA  shift, and go to state 17

    $default  reduce using rule 21 ($@5)

    $@5  go to state 18


State 15

   29 declaration_list: ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 19


State 16

    7 func_declaration: type_specifier ID LPAREN . parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID LPAREN . RPAREN SEMICOLON
   10 func_definition: type_specifier ID LPAREN . parameter_list RPAREN $@1 compound_statement
   12                | type_specifier ID LPAREN . RPAREN $@2 compound_statement

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    VOID    shift, and go to state 3
    RPAREN  shift, and go to state 20

    parameter_list  go to state 21
    type_specifier  go to state 22


State 17

   26 declaration_list: declaration_list COMMA . ID
   27                 | declaration_list COMMA . ID LTHIRD CONST_INT RTHIRD

    ID  shift, and go to state 23


State 18

   22 var_declaration: type_specifier declaration_list $@5 . SEMICOLON

    SEMICOLON  shift, and go to state 24


State 19

   29 declaration_list: ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 25


State 20

    8 func_declaration: type_specifier ID LPAREN RPAREN . SEMICOLON
   12 func_definition: type_specifier ID LPAREN RPAREN . $@2 compound_statement

    SEMICOLON  shift, and go to state 26

    $default  reduce using rule 11 ($@2)

    $@2  go to state 27


State 21

    7 func_declaration: type_specifier ID LPAREN parameter_list . RPAREN SEMICOLON
   10 func_definition: type_specifier ID LPAREN parameter_list . RPAREN $@1 compound_statement
   13 parameter_list: parameter_list . COMMA type_specifier ID
   14               | parameter_list . COMMA type_specifier

    COMMA   shift, and go to state 28
    RPAREN  shift, and go to state 29


State 22

   15 parameter_list: type_specifier . ID
   16               | type_specifier .

    ID  shift, and go to state 30

    $default  reduce using rule 16 (parameter_list)


State 23

   26 declaration_list: declaration_list COMMA ID .
   27                 | declaration_list COMMA ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 31

    $default  reduce using rule 26 (declaration_list)


State 24

   22 var_declaration: type_specifier declaration_list $@5 SEMICOLON .

    $default  reduce using rule 22 (var_declaration)


State 25

   29 declaration_list: ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 29 (declaration_list)


State 26

    8 func_declaration: type_specifier ID LPAREN RPAREN SEMICOLON .

    $default  reduce using rule 8 (func_declaration)


State 27

   12 func_definition: type_specifier ID LPAREN RPAREN $@2 . compound_statement

    LCURL  shift, and go to state 32

    compound_statement  go to state 33


State 28

   13 parameter_list: parameter_list COMMA . type_specifier ID
   14               | parameter_list COMMA . type_specifier

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 34


State 29

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN . SEMICOLON
   10 func_definition: type_specifier ID LPAREN parameter_list RPAREN . $@1 compound_statement

    SEMICOLON  shift, and go to state 35

    $default  reduce using rule 9 ($@1)

    $@1  go to state 36


State 30

   15 parameter_list: type_specifier ID .

    $default  reduce using rule 15 (parameter_list)


State 31

   27 declaration_list: declaration_list COMMA ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 37


State 32

   18 compound_statement: LCURL . $@3 statements RCURL
   20                   | LCURL . $@4 RCURL

    RCURL     reduce using rule 19 ($@4)
    $default  reduce using rule 17 ($@3)

    $@3  go to state 38
    $@4  go to state 39


State 33

   12 func_definition: type_specifier ID LPAREN RPAREN $@2 compound_statement .

    $default  reduce using rule 12 (func_definition)


State 34

   13 parameter_list: parameter_list COMMA type_specifier . ID
   14               | parameter_list COMMA type_specifier .

    ID  shift, and go to state 40

    $default  reduce using rule 14 (parameter_list)


State 35

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON .

    $default  reduce using rule 7 (func_declaration)


State 36

   10 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 . compound_statement

    LCURL  shift, and go to state 32

    compound_statement  go to state 41


State 37

   27 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 42


State 38

   18 compound_statement: LCURL $@3 . statements RCURL

    NOT          shift, and go to state 43
    PRINTLN      shift, and go to state 44
    RETURN       shift, and go to state 45
    ID           shift, and go to state 46
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    ADDOP        shift, and go to state 49
    SEMICOLON    shift, and go to state 50
    LCURL        shift, and go to state 32
    LPAREN       shift, and go to state 51
    IF           shift, and go to state 52
    FOR          shift, and go to state 53
    WHILE        shift, and go to state 54

    compound_statement    go to state 55
    var_declaration       go to state 56
    type_specifier        go to state 57
    statements            go to state 58
    statement             go to state 59
    expression_statement  go to state 60
    variable              go to state 61
    expression            go to state 62
    logic_expression      go to state 63
    rel_expression        go to state 64
    simple_expression     go to state 65
    term                  go to state 66
    unary_expression      go to state 67
    factor                go to state 68


State 39

   20 compound_statement: LCURL $@4 . RCURL

    RCURL  shift, and go to state 69


State 40

   13 parameter_list: parameter_list COMMA type_specifier ID .

    $default  reduce using rule 13 (parameter_list)


State 41

   10 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 compound_statement .

    $default  reduce using rule 10 (func_definition)


State 42

   27 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 27 (declaration_list)


State 43

   56 unary_expression: NOT . unary_expression

    NOT          shift, and go to state 43
    ID           shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    ADDOP        shift, and go to state 49
    LPAREN       shift, and go to state 51

    variable          go to state 70
    unary_expression  go to state 71
    factor            go to state 68


State 44

   39 statement: PRINTLN . LPAREN ID RPAREN SEMICOLON

    LPAREN  shift, and go to state 72


State 45

   40 statement: RETURN . expression SEMICOLON

    NOT          shift, and go to state 43
    ID           shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    ADDOP        shift, and go to state 49
    LPAREN       shift, and go to state 51

    variable           go to state 61
    expression         go to state 73
    logic_expression   go to state 63
    rel_expression     go to state 64
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68


State 46

   43 variable: ID .
   44         | ID . LTHIRD expression RTHIRD
   59 factor: ID . LPAREN argument_list RPAREN

    LTHIRD  shift, and go to state 74
    LPAREN  shift, and go to state 75

    $default  reduce using rule 43 (variable)


State 47

   62 factor: CONST_FLOAT .

    $default  reduce using rule 62 (factor)


State 48

   61 factor: CONST_INT .

    $default  reduce using rule 61 (factor)


State 49

   55 unary_expression: ADDOP . unary_expression

    NOT          shift, and go to state 43
    ID           shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    ADDOP        shift, and go to state 49
    LPAREN       shift, and go to state 51

    variable          go to state 70
    unary_expression  go to state 76
    factor            go to state 68


State 50

   41 expression_statement: SEMICOLON .

    $default  reduce using rule 41 (expression_statement)


State 51

   60 factor: LPAREN . expression RPAREN

    NOT          shift, and go to state 43
    ID           shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    ADDOP        shift, and go to state 49
    LPAREN       shift, and go to state 51

    variable           go to state 61
    expression         go to state 77
    logic_expression   go to state 63
    rel_expression     go to state 64
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68


State 52

   36 statement: IF . LPAREN expression RPAREN statement
   37          | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 78


State 53

   35 statement: FOR . LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 79


State 54

   38 statement: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 80


State 55

   34 statement: compound_statement .

    $default  reduce using rule 34 (statement)


State 56

   32 statement: var_declaration .

    $default  reduce using rule 32 (statement)


State 57

   22 var_declaration: type_specifier . declaration_list $@5 SEMICOLON

    ID  shift, and go to state 81

    declaration_list  go to state 14


State 58

   18 compound_statement: LCURL $@3 statements . RCURL
   31 statements: statements . statement

    NOT          shift, and go to state 43
    PRINTLN      shift, and go to state 44
    RETURN       shift, and go to state 45
    ID           shift, and go to state 46
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    ADDOP        shift, and go to state 49
    SEMICOLON    shift, and go to state 50
    LCURL        shift, and go to state 32
    RCURL        shift, and go to state 82
    LPAREN       shift, and go to state 51
    IF           shift, and go to state 52
    FOR          shift, and go to state 53
    WHILE        shift, and go to state 54

    compound_statement    go to state 55
    var_declaration       go to state 56
    type_specifier        go to state 57
    statement             go to state 83
    expression_statement  go to state 60
    variable              go to state 61
    expression            go to state 62
    logic_expression      go to state 63
    rel_expression        go to state 64
    simple_expression     go to state 65
    term                  go to state 66
    unary_expression      go to state 67
    factor                go to state 68


State 59

   30 statements: statement .

    $default  reduce using rule 30 (statements)


State 60

   33 statement: expression_statement .

    $default  reduce using rule 33 (statement)


State 61

   46 expression: variable . ASSIGNOP logic_expression
   58 factor: variable .
   63       | variable . INCOP
   64       | variable . DECOP

    DECOP     shift, and go to state 84
    INCOP     shift, and go to state 85
    ASSIGNOP  shift, and go to state 86

    $default  reduce using rule 58 (factor)


State 62

   42 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 87


State 63

   45 expression: logic_expression .

    $default  reduce using rule 45 (expression)


State 64

   47 logic_expression: rel_expression .
   48                 | rel_expression . LOGICOP rel_expression

    LOGICOP  shift, and go to state 88

    $default  reduce using rule 47 (logic_expression)


State 65

   49 rel_expression: simple_expression .
   50               | simple_expression . RELOP simple_expression
   52 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 89
    RELOP  shift, and go to state 90

    $default  reduce using rule 49 (rel_expression)


State 66

   51 simple_expression: term .
   54 term: term . MULOP unary_expression

    MULOP  shift, and go to state 91

    $default  reduce using rule 51 (simple_expression)


State 67

   53 term: unary_expression .

    $default  reduce using rule 53 (term)


State 68

   57 unary_expression: factor .

    $default  reduce using rule 57 (unary_expression)


State 69

   20 compound_statement: LCURL $@4 RCURL .

    $default  reduce using rule 20 (compound_statement)


State 70

   58 factor: variable .
   63       | variable . INCOP
   64       | variable . DECOP

    DECOP  shift, and go to state 84
    INCOP  shift, and go to state 85

    $default  reduce using rule 58 (factor)


State 71

   56 unary_expression: NOT unary_expression .

    $default  reduce using rule 56 (unary_expression)


State 72

   39 statement: PRINTLN LPAREN . ID RPAREN SEMICOLON

    ID  shift, and go to state 92


State 73

   40 statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 93


State 74

   44 variable: ID LTHIRD . expression RTHIRD

    NOT          shift, and go to state 43
    ID           shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    ADDOP        shift, and go to state 49
    LPAREN       shift, and go to state 51

    variable           go to state 61
    expression         go to state 94
    logic_expression   go to state 63
    rel_expression     go to state 64
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68


State 75

   59 factor: ID LPAREN . argument_list RPAREN

    NOT          shift, and go to state 43
    ID           shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    ADDOP        shift, and go to state 49
    LPAREN       shift, and go to state 51

    $default  reduce using rule 66 (argument_list)

    variable           go to state 70
    logic_expression   go to state 95
    rel_expression     go to state 64
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68
    argument_list      go to state 96
    arguments          go to state 97


State 76

   55 unary_expression: ADDOP unary_expression .

    $default  reduce using rule 55 (unary_expression)


State 77

   60 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 98


State 78

   36 statement: IF LPAREN . expression RPAREN statement
   37          | IF LPAREN . expression RPAREN statement ELSE statement

    NOT          shift, and go to state 43
    ID           shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    ADDOP        shift, and go to state 49
    LPAREN       shift, and go to state 51

    variable           go to state 61
    expression         go to state 99
    logic_expression   go to state 63
    rel_expression     go to state 64
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68


State 79

   35 statement: FOR LPAREN . expression_statement expression_statement expression RPAREN statement

    NOT          shift, and go to state 43
    ID           shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    ADDOP        shift, and go to state 49
    SEMICOLON    shift, and go to state 50
    LPAREN       shift, and go to state 51

    expression_statement  go to state 100
    variable              go to state 61
    expression            go to state 62
    logic_expression      go to state 63
    rel_expression        go to state 64
    simple_expression     go to state 65
    term                  go to state 66
    unary_expression      go to state 67
    factor                go to state 68


State 80

   38 statement: WHILE LPAREN . expression RPAREN statement

    NOT          shift, and go to state 43
    ID           shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    ADDOP        shift, and go to state 49
    LPAREN       shift, and go to state 51

    variable           go to state 61
    expression         go to state 101
    logic_expression   go to state 63
    rel_expression     go to state 64
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68


State 81

   28 declaration_list: ID .
   29                 | ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 15

    $default  reduce using rule 28 (declaration_list)


State 82

   18 compound_statement: LCURL $@3 statements RCURL .

    $default  reduce using rule 18 (compound_statement)


State 83

   31 statements: statements statement .

    $default  reduce using rule 31 (statements)


State 84

   64 factor: variable DECOP .

    $default  reduce using rule 64 (factor)


State 85

   63 factor: variable INCOP .

    $default  reduce using rule 63 (factor)


State 86

   46 expression: variable ASSIGNOP . logic_expression

    NOT          shift, and go to state 43
    ID           shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    ADDOP        shift, and go to state 49
    LPAREN       shift, and go to state 51

    variable           go to state 70
    logic_expression   go to state 102
    rel_expression     go to state 64
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68


State 87

   42 expression_statement: expression SEMICOLON .

    $default  reduce using rule 42 (expression_statement)


State 88

   48 logic_expression: rel_expression LOGICOP . rel_expression

    NOT          shift, and go to state 43
    ID           shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    ADDOP        shift, and go to state 49
    LPAREN       shift, and go to state 51

    variable           go to state 70
    rel_expression     go to state 103
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68


State 89

   52 simple_expression: simple_expression ADDOP . term

    NOT          shift, and go to state 43
    ID           shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    ADDOP        shift, and go to state 49
    LPAREN       shift, and go to state 51

    variable          go to state 70
    term              go to state 104
    unary_expression  go to state 67
    factor            go to state 68


State 90

   50 rel_expression: simple_expression RELOP . simple_expression

    NOT          shift, and go to state 43
    ID           shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    ADDOP        shift, and go to state 49
    LPAREN       shift, and go to state 51

    variable           go to state 70
    simple_expression  go to state 105
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68


State 91

   54 term: term MULOP . unary_expression

    NOT          shift, and go to state 43
    ID           shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    ADDOP        shift, and go to state 49
    LPAREN       shift, and go to state 51

    variable          go to state 70
    unary_expression  go to state 106
    factor            go to state 68


State 92

   39 statement: PRINTLN LPAREN ID . RPAREN SEMICOLON

    RPAREN  shift, and go to state 107


State 93

   40 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 40 (statement)


State 94

   44 variable: ID LTHIRD expression . RTHIRD

    RTHIRD  shift, and go to state 108


State 95

   68 arguments: logic_expression .

    $default  reduce using rule 68 (arguments)


State 96

   59 factor: ID LPAREN argument_list . RPAREN

    RPAREN  shift, and go to state 109


State 97

   65 argument_list: arguments .
   67 arguments: arguments . COMMA logic_expression

    COMMA  shift, and go to state 110

    $default  reduce using rule 65 (argument_list)


State 98

   60 factor: LPAREN expression RPAREN .

    $default  reduce using rule 60 (factor)


State 99

   36 statement: IF LPAREN expression . RPAREN statement
   37          | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 111


State 100

   35 statement: FOR LPAREN expression_statement . expression_statement expression RPAREN statement

    NOT          shift, and go to state 43
    ID           shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    ADDOP        shift, and go to state 49
    SEMICOLON    shift, and go to state 50
    LPAREN       shift, and go to state 51

    expression_statement  go to state 112
    variable              go to state 61
    expression            go to state 62
    logic_expression      go to state 63
    rel_expression        go to state 64
    simple_expression     go to state 65
    term                  go to state 66
    unary_expression      go to state 67
    factor                go to state 68


State 101

   38 statement: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 113


State 102

   46 expression: variable ASSIGNOP logic_expression .

    $default  reduce using rule 46 (expression)


State 103

   48 logic_expression: rel_expression LOGICOP rel_expression .

    $default  reduce using rule 48 (logic_expression)


State 104

   52 simple_expression: simple_expression ADDOP term .
   54 term: term . MULOP unary_expression

    MULOP  shift, and go to state 91

    $default  reduce using rule 52 (simple_expression)


State 105

   50 rel_expression: simple_expression RELOP simple_expression .
   52 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 89

    $default  reduce using rule 50 (rel_expression)


State 106

   54 term: term MULOP unary_expression .

    $default  reduce using rule 54 (term)


State 107

   39 statement: PRINTLN LPAREN ID RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 114


State 108

   44 variable: ID LTHIRD expression RTHIRD .

    $default  reduce using rule 44 (variable)


State 109

   59 factor: ID LPAREN argument_list RPAREN .

    $default  reduce using rule 59 (factor)


State 110

   67 arguments: arguments COMMA . logic_expression

    NOT          shift, and go to state 43
    ID           shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    ADDOP        shift, and go to state 49
    LPAREN       shift, and go to state 51

    variable           go to state 70
    logic_expression   go to state 115
    rel_expression     go to state 64
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68


State 111

   36 statement: IF LPAREN expression RPAREN . statement
   37          | IF LPAREN expression RPAREN . statement ELSE statement

    NOT          shift, and go to state 43
    PRINTLN      shift, and go to state 44
    RETURN       shift, and go to state 45
    ID           shift, and go to state 46
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    ADDOP        shift, and go to state 49
    SEMICOLON    shift, and go to state 50
    LCURL        shift, and go to state 32
    LPAREN       shift, and go to state 51
    IF           shift, and go to state 52
    FOR          shift, and go to state 53
    WHILE        shift, and go to state 54

    compound_statement    go to state 55
    var_declaration       go to state 56
    type_specifier        go to state 57
    statement             go to state 116
    expression_statement  go to state 60
    variable              go to state 61
    expression            go to state 62
    logic_expression      go to state 63
    rel_expression        go to state 64
    simple_expression     go to state 65
    term                  go to state 66
    unary_expression      go to state 67
    factor                go to state 68


State 112

   35 statement: FOR LPAREN expression_statement expression_statement . expression RPAREN statement

    NOT          shift, and go to state 43
    ID           shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    ADDOP        shift, and go to state 49
    LPAREN       shift, and go to state 51

    variable           go to state 61
    expression         go to state 117
    logic_expression   go to state 63
    rel_expression     go to state 64
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68


State 113

   38 statement: WHILE LPAREN expression RPAREN . statement

    NOT          shift, and go to state 43
    PRINTLN      shift, and go to state 44
    RETURN       shift, and go to state 45
    ID           shift, and go to state 46
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    ADDOP        shift, and go to state 49
    SEMICOLON    shift, and go to state 50
    LCURL        shift, and go to state 32
    LPAREN       shift, and go to state 51
    IF           shift, and go to state 52
    FOR          shift, and go to state 53
    WHILE        shift, and go to state 54

    compound_statement    go to state 55
    var_declaration       go to state 56
    type_specifier        go to state 57
    statement             go to state 118
    expression_statement  go to state 60
    variable              go to state 61
    expression            go to state 62
    logic_expression      go to state 63
    rel_expression        go to state 64
    simple_expression     go to state 65
    term                  go to state 66
    unary_expression      go to state 67
    factor                go to state 68


State 114

   39 statement: PRINTLN LPAREN ID RPAREN SEMICOLON .

    $default  reduce using rule 39 (statement)


State 115

   67 arguments: arguments COMMA logic_expression .

    $default  reduce using rule 67 (arguments)


State 116

   36 statement: IF LPAREN expression RPAREN statement .
   37          | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 119

    $default  reduce using rule 36 (statement)


State 117

   35 statement: FOR LPAREN expression_statement expression_statement expression . RPAREN statement

    RPAREN  shift, and go to state 120


State 118

   38 statement: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 38 (statement)


State 119

   37 statement: IF LPAREN expression RPAREN statement ELSE . statement

    NOT          shift, and go to state 43
    PRINTLN      shift, and go to state 44
    RETURN       shift, and go to state 45
    ID           shift, and go to state 46
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    ADDOP        shift, and go to state 49
    SEMICOLON    shift, and go to state 50
    LCURL        shift, and go to state 32
    LPAREN       shift, and go to state 51
    IF           shift, and go to state 52
    FOR          shift, and go to state 53
    WHILE        shift, and go to state 54

    compound_statement    go to state 55
    var_declaration       go to state 56
    type_specifier        go to state 57
    statement             go to state 121
    expression_statement  go to state 60
    variable              go to state 61
    expression            go to state 62
    logic_expression      go to state 63
    rel_expression        go to state 64
    simple_expression     go to state 65
    term                  go to state 66
    unary_expression      go to state 67
    factor                go to state 68


State 120

   35 statement: FOR LPAREN expression_statement expression_statement expression RPAREN . statement

    NOT          shift, and go to state 43
    PRINTLN      shift, and go to state 44
    RETURN       shift, and go to state 45
    ID           shift, and go to state 46
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    CONST_FLOAT  shift, and go to state 47
    CONST_INT    shift, and go to state 48
    ADDOP        shift, and go to state 49
    SEMICOLON    shift, and go to state 50
    LCURL        shift, and go to state 32
    LPAREN       shift, and go to state 51
    IF           shift, and go to state 52
    FOR          shift, and go to state 53
    WHILE        shift, and go to state 54

    compound_statement    go to state 55
    var_declaration       go to state 56
    type_specifier        go to state 57
    statement             go to state 122
    expression_statement  go to state 60
    variable              go to state 61
    expression            go to state 62
    logic_expression      go to state 63
    rel_expression        go to state 64
    simple_expression     go to state 65
    term                  go to state 66
    unary_expression      go to state 67
    factor                go to state 68


State 121

   37 statement: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 37 (statement)


State 122

   35 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement .

    $default  reduce using rule 35 (statement)
