Terminals unused in grammar

   DO
   SWITCH
   CASE
   DEFAULT
   CONTINUE
   BREAK
   BITOP
   STRING
   NEWLINE
   DOUBLE
   CONST_CHAR


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit

    4 unit: var_declaration
    5     | func_declaration
    6     | func_definition

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID LPAREN RPAREN SEMICOLON

    9 func_definition: type_specifier ID LPAREN parameter_list RPAREN compound_statement
   10                | type_specifier ID LPAREN RPAREN compound_statement

   11 parameter_list: parameter_list COMMA type_specifier ID
   12               | parameter_list COMMA type_specifier
   13               | type_specifier ID
   14               | type_specifier

   15 $@1: %empty

   16 compound_statement: LCURL $@1 statements RCURL

   17 $@2: %empty

   18 compound_statement: LCURL $@2 RCURL

   19 var_declaration: type_specifier declaration_list SEMICOLON

   20 type_specifier: INT
   21               | FLOAT
   22               | VOID

   23 declaration_list: declaration_list COMMA ID
   24                 | declaration_list COMMA ID LTHIRD CONST_INT RTHIRD
   25                 | ID
   26                 | ID LTHIRD CONST_INT RTHIRD

   27 statements: statement
   28           | statements statement

   29 statement: var_declaration
   30          | expression_statement
   31          | compound_statement
   32          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
   33          | IF LPAREN expression RPAREN statement
   34          | IF LPAREN expression RPAREN statement ELSE statement
   35          | WHILE LPAREN expression RPAREN statement
   36          | PRINTLN LPAREN ID RPAREN SEMICOLON
   37          | RETURN expression SEMICOLON

   38 expression_statement: SEMICOLON
   39                     | expression SEMICOLON

   40 variable: ID
   41         | ID LTHIRD expression RTHIRD

   42 expression: logic_expression
   43           | variable ASSIGNOP logic_expression

   44 logic_expression: rel_expression
   45                 | rel_expression LOGICOP rel_expression

   46 rel_expression: simple_expression
   47               | simple_expression RELOP simple_expression

   48 simple_expression: term
   49                  | simple_expression ADDOP term

   50 term: unary_expression
   51     | term MULOP unary_expression

   52 unary_expression: ADDOP unary_expression
   53                 | NOT unary_expression
   54                 | factor

   55 factor: variable
   56       | ID LPAREN argument_list RPAREN
   57       | LPAREN expression RPAREN
   58       | CONST_INT
   59       | CONST_FLOAT
   60       | variable INCOP
   61       | variable DECOP

   62 argument_list: arguments
   63              | %empty

   64 arguments: arguments COMMA logic_expression
   65          | logic_expression


Terminals, with rules where they appear

$end (0) 0
error (256)
DO (258)
SWITCH (259)
CASE (260)
DEFAULT (261)
CONTINUE (262)
BREAK (263)
DECOP (264) 61
INCOP (265) 60
BITOP (266)
NOT (267) 53
LTHIRD (268) 24 26 41
RTHIRD (269) 24 26 41
COMMA (270) 11 12 23 24 64
STRING (271)
PRINTLN (272) 36
NEWLINE (273)
RETURN (274) 37
ID (275) 7 8 9 10 11 13 23 24 25 26 36 40 41 56
INT (276) 20
FLOAT (277) 21
DOUBLE (278)
VOID (279) 22
CONST_CHAR (280)
CONST_FLOAT (281) 59
CONST_INT (282) 24 26 58
ADDOP (283) 49 52
MULOP (284) 51
RELOP (285) 47
LOGICOP (286) 45
ASSIGNOP (287) 43
SEMICOLON (288) 7 8 19 36 37 38 39
LCURL (289) 16 18
RCURL (290) 16 18
LPAREN (291) 7 8 9 10 32 33 34 35 36 56 57
RPAREN (292) 7 8 9 10 32 33 34 35 36 56 57
IF (293) 33 34
ELSE (294) 34
FOR (295) 32
WHILE (296) 35
LOWER_THEN_ELSE (297)


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
start (44)
    on left: 1, on right: 0
program (45)
    on left: 2 3, on right: 1 2
unit (46)
    on left: 4 5 6, on right: 2 3
func_declaration (47)
    on left: 7 8, on right: 5
func_definition (48)
    on left: 9 10, on right: 6
parameter_list (49)
    on left: 11 12 13 14, on right: 7 9 11 12
compound_statement (50)
    on left: 16 18, on right: 9 10 31
$@1 (51)
    on left: 15, on right: 16
$@2 (52)
    on left: 17, on right: 18
var_declaration (53)
    on left: 19, on right: 4 29
type_specifier (54)
    on left: 20 21 22, on right: 7 8 9 10 11 12 13 14 19
declaration_list (55)
    on left: 23 24 25 26, on right: 19 23 24
statements (56)
    on left: 27 28, on right: 16 28
statement (57)
    on left: 29 30 31 32 33 34 35 36 37, on right: 27 28 32 33 34 35
expression_statement (58)
    on left: 38 39, on right: 30 32
variable (59)
    on left: 40 41, on right: 43 55 60 61
expression (60)
    on left: 42 43, on right: 32 33 34 35 37 39 41 57
logic_expression (61)
    on left: 44 45, on right: 42 43 64 65
rel_expression (62)
    on left: 46 47, on right: 44 45
simple_expression (63)
    on left: 48 49, on right: 46 47 49
term (64)
    on left: 50 51, on right: 48 49 51
unary_expression (65)
    on left: 52 53 54, on right: 50 51 52 53
factor (66)
    on left: 55 56 57 58 59 60 61, on right: 54
argument_list (67)
    on left: 62 63, on right: 56
arguments (68)
    on left: 64 65, on right: 62 64


State 0

    0 $accept: . start $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    start             go to state 4
    program           go to state 5
    unit              go to state 6
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 1

   20 type_specifier: INT .

    $default  reduce using rule 20 (type_specifier)


State 2

   21 type_specifier: FLOAT .

    $default  reduce using rule 21 (type_specifier)


State 3

   22 type_specifier: VOID .

    $default  reduce using rule 22 (type_specifier)


State 4

    0 $accept: start . $end

    $end  shift, and go to state 11


State 5

    1 start: program .
    2 program: program . unit

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (start)

    unit              go to state 12
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 6

    3 program: unit .

    $default  reduce using rule 3 (program)


State 7

    5 unit: func_declaration .

    $default  reduce using rule 5 (unit)


State 8

    6 unit: func_definition .

    $default  reduce using rule 6 (unit)


State 9

    4 unit: var_declaration .

    $default  reduce using rule 4 (unit)


State 10

    7 func_declaration: type_specifier . ID LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier . ID LPAREN RPAREN SEMICOLON
    9 func_definition: type_specifier . ID LPAREN parameter_list RPAREN compound_statement
   10                | type_specifier . ID LPAREN RPAREN compound_statement
   19 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 13

    declaration_list  go to state 14


State 11

    0 $accept: start $end .

    $default  accept


State 12

    2 program: program unit .

    $default  reduce using rule 2 (program)


State 13

    7 func_declaration: type_specifier ID . LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID . LPAREN RPAREN SEMICOLON
    9 func_definition: type_specifier ID . LPAREN parameter_list RPAREN compound_statement
   10                | type_specifier ID . LPAREN RPAREN compound_statement
   25 declaration_list: ID .
   26                 | ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 15
    LPAREN  shift, and go to state 16

    $default  reduce using rule 25 (declaration_list)


State 14

   19 var_declaration: type_specifier declaration_list . SEMICOLON
   23 declaration_list: declaration_list . COMMA ID
   24                 | declaration_list . COMMA ID LTHIRD CONST_INT RTHIRD

    COMMA      shift, and go to state 17
    SEMICOLON  shift, and go to state 18


State 15

   26 declaration_list: ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 19


State 16

    7 func_declaration: type_specifier ID LPAREN . parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID LPAREN . RPAREN SEMICOLON
    9 func_definition: type_specifier ID LPAREN . parameter_list RPAREN compound_statement
   10                | type_specifier ID LPAREN . RPAREN compound_statement

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    VOID    shift, and go to state 3
    RPAREN  shift, and go to state 20

    parameter_list  go to state 21
    type_specifier  go to state 22


State 17

   23 declaration_list: declaration_list COMMA . ID
   24                 | declaration_list COMMA . ID LTHIRD CONST_INT RTHIRD

    ID  shift, and go to state 23


State 18

   19 var_declaration: type_specifier declaration_list SEMICOLON .

    $default  reduce using rule 19 (var_declaration)


State 19

   26 declaration_list: ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 24


State 20

    8 func_declaration: type_specifier ID LPAREN RPAREN . SEMICOLON
   10 func_definition: type_specifier ID LPAREN RPAREN . compound_statement

    SEMICOLON  shift, and go to state 25
    LCURL      shift, and go to state 26

    compound_statement  go to state 27


State 21

    7 func_declaration: type_specifier ID LPAREN parameter_list . RPAREN SEMICOLON
    9 func_definition: type_specifier ID LPAREN parameter_list . RPAREN compound_statement
   11 parameter_list: parameter_list . COMMA type_specifier ID
   12               | parameter_list . COMMA type_specifier

    COMMA   shift, and go to state 28
    RPAREN  shift, and go to state 29


State 22

   13 parameter_list: type_specifier . ID
   14               | type_specifier .

    ID  shift, and go to state 30

    $default  reduce using rule 14 (parameter_list)


State 23

   23 declaration_list: declaration_list COMMA ID .
   24                 | declaration_list COMMA ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 31

    $default  reduce using rule 23 (declaration_list)


State 24

   26 declaration_list: ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 26 (declaration_list)


State 25

    8 func_declaration: type_specifier ID LPAREN RPAREN SEMICOLON .

    $default  reduce using rule 8 (func_declaration)


State 26

   16 compound_statement: LCURL . $@1 statements RCURL
   18                   | LCURL . $@2 RCURL

    RCURL     reduce using rule 17 ($@2)
    $default  reduce using rule 15 ($@1)

    $@1  go to state 32
    $@2  go to state 33


State 27

   10 func_definition: type_specifier ID LPAREN RPAREN compound_statement .

    $default  reduce using rule 10 (func_definition)


State 28

   11 parameter_list: parameter_list COMMA . type_specifier ID
   12               | parameter_list COMMA . type_specifier

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 34


State 29

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN . SEMICOLON
    9 func_definition: type_specifier ID LPAREN parameter_list RPAREN . compound_statement

    SEMICOLON  shift, and go to state 35
    LCURL      shift, and go to state 26

    compound_statement  go to state 36


State 30

   13 parameter_list: type_specifier ID .

    $default  reduce using rule 13 (parameter_list)


State 31

   24 declaration_list: declaration_list COMMA ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 37


State 32

   16 compound_statement: LCURL $@1 . statements RCURL

    NOT          shift, and go to state 38
    PRINTLN      shift, and go to state 39
    RETURN       shift, and go to state 40
    ID           shift, and go to state 41
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    CONST_FLOAT  shift, and go to state 42
    CONST_INT    shift, and go to state 43
    ADDOP        shift, and go to state 44
    SEMICOLON    shift, and go to state 45
    LCURL        shift, and go to state 26
    LPAREN       shift, and go to state 46
    IF           shift, and go to state 47
    FOR          shift, and go to state 48
    WHILE        shift, and go to state 49

    compound_statement    go to state 50
    var_declaration       go to state 51
    type_specifier        go to state 52
    statements            go to state 53
    statement             go to state 54
    expression_statement  go to state 55
    variable              go to state 56
    expression            go to state 57
    logic_expression      go to state 58
    rel_expression        go to state 59
    simple_expression     go to state 60
    term                  go to state 61
    unary_expression      go to state 62
    factor                go to state 63


State 33

   18 compound_statement: LCURL $@2 . RCURL

    RCURL  shift, and go to state 64


State 34

   11 parameter_list: parameter_list COMMA type_specifier . ID
   12               | parameter_list COMMA type_specifier .

    ID  shift, and go to state 65

    $default  reduce using rule 12 (parameter_list)


State 35

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON .

    $default  reduce using rule 7 (func_declaration)


State 36

    9 func_definition: type_specifier ID LPAREN parameter_list RPAREN compound_statement .

    $default  reduce using rule 9 (func_definition)


State 37

   24 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 66


State 38

   53 unary_expression: NOT . unary_expression

    NOT          shift, and go to state 38
    ID           shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    CONST_INT    shift, and go to state 43
    ADDOP        shift, and go to state 44
    LPAREN       shift, and go to state 46

    variable          go to state 67
    unary_expression  go to state 68
    factor            go to state 63


State 39

   36 statement: PRINTLN . LPAREN ID RPAREN SEMICOLON

    LPAREN  shift, and go to state 69


State 40

   37 statement: RETURN . expression SEMICOLON

    NOT          shift, and go to state 38
    ID           shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    CONST_INT    shift, and go to state 43
    ADDOP        shift, and go to state 44
    LPAREN       shift, and go to state 46

    variable           go to state 56
    expression         go to state 70
    logic_expression   go to state 58
    rel_expression     go to state 59
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 41

   40 variable: ID .
   41         | ID . LTHIRD expression RTHIRD
   56 factor: ID . LPAREN argument_list RPAREN

    LTHIRD  shift, and go to state 71
    LPAREN  shift, and go to state 72

    $default  reduce using rule 40 (variable)


State 42

   59 factor: CONST_FLOAT .

    $default  reduce using rule 59 (factor)


State 43

   58 factor: CONST_INT .

    $default  reduce using rule 58 (factor)


State 44

   52 unary_expression: ADDOP . unary_expression

    NOT          shift, and go to state 38
    ID           shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    CONST_INT    shift, and go to state 43
    ADDOP        shift, and go to state 44
    LPAREN       shift, and go to state 46

    variable          go to state 67
    unary_expression  go to state 73
    factor            go to state 63


State 45

   38 expression_statement: SEMICOLON .

    $default  reduce using rule 38 (expression_statement)


State 46

   57 factor: LPAREN . expression RPAREN

    NOT          shift, and go to state 38
    ID           shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    CONST_INT    shift, and go to state 43
    ADDOP        shift, and go to state 44
    LPAREN       shift, and go to state 46

    variable           go to state 56
    expression         go to state 74
    logic_expression   go to state 58
    rel_expression     go to state 59
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 47

   33 statement: IF . LPAREN expression RPAREN statement
   34          | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 75


State 48

   32 statement: FOR . LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 76


State 49

   35 statement: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 77


State 50

   31 statement: compound_statement .

    $default  reduce using rule 31 (statement)


State 51

   29 statement: var_declaration .

    $default  reduce using rule 29 (statement)


State 52

   19 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 78

    declaration_list  go to state 14


State 53

   16 compound_statement: LCURL $@1 statements . RCURL
   28 statements: statements . statement

    NOT          shift, and go to state 38
    PRINTLN      shift, and go to state 39
    RETURN       shift, and go to state 40
    ID           shift, and go to state 41
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    CONST_FLOAT  shift, and go to state 42
    CONST_INT    shift, and go to state 43
    ADDOP        shift, and go to state 44
    SEMICOLON    shift, and go to state 45
    LCURL        shift, and go to state 26
    RCURL        shift, and go to state 79
    LPAREN       shift, and go to state 46
    IF           shift, and go to state 47
    FOR          shift, and go to state 48
    WHILE        shift, and go to state 49

    compound_statement    go to state 50
    var_declaration       go to state 51
    type_specifier        go to state 52
    statement             go to state 80
    expression_statement  go to state 55
    variable              go to state 56
    expression            go to state 57
    logic_expression      go to state 58
    rel_expression        go to state 59
    simple_expression     go to state 60
    term                  go to state 61
    unary_expression      go to state 62
    factor                go to state 63


State 54

   27 statements: statement .

    $default  reduce using rule 27 (statements)


State 55

   30 statement: expression_statement .

    $default  reduce using rule 30 (statement)


State 56

   43 expression: variable . ASSIGNOP logic_expression
   55 factor: variable .
   60       | variable . INCOP
   61       | variable . DECOP

    DECOP     shift, and go to state 81
    INCOP     shift, and go to state 82
    ASSIGNOP  shift, and go to state 83

    $default  reduce using rule 55 (factor)


State 57

   39 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 84


State 58

   42 expression: logic_expression .

    $default  reduce using rule 42 (expression)


State 59

   44 logic_expression: rel_expression .
   45                 | rel_expression . LOGICOP rel_expression

    LOGICOP  shift, and go to state 85

    $default  reduce using rule 44 (logic_expression)


State 60

   46 rel_expression: simple_expression .
   47               | simple_expression . RELOP simple_expression
   49 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 86
    RELOP  shift, and go to state 87

    $default  reduce using rule 46 (rel_expression)


State 61

   48 simple_expression: term .
   51 term: term . MULOP unary_expression

    MULOP  shift, and go to state 88

    $default  reduce using rule 48 (simple_expression)


State 62

   50 term: unary_expression .

    $default  reduce using rule 50 (term)


State 63

   54 unary_expression: factor .

    $default  reduce using rule 54 (unary_expression)


State 64

   18 compound_statement: LCURL $@2 RCURL .

    $default  reduce using rule 18 (compound_statement)


State 65

   11 parameter_list: parameter_list COMMA type_specifier ID .

    $default  reduce using rule 11 (parameter_list)


State 66

   24 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 24 (declaration_list)


State 67

   55 factor: variable .
   60       | variable . INCOP
   61       | variable . DECOP

    DECOP  shift, and go to state 81
    INCOP  shift, and go to state 82

    $default  reduce using rule 55 (factor)


State 68

   53 unary_expression: NOT unary_expression .

    $default  reduce using rule 53 (unary_expression)


State 69

   36 statement: PRINTLN LPAREN . ID RPAREN SEMICOLON

    ID  shift, and go to state 89


State 70

   37 statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 90


State 71

   41 variable: ID LTHIRD . expression RTHIRD

    NOT          shift, and go to state 38
    ID           shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    CONST_INT    shift, and go to state 43
    ADDOP        shift, and go to state 44
    LPAREN       shift, and go to state 46

    variable           go to state 56
    expression         go to state 91
    logic_expression   go to state 58
    rel_expression     go to state 59
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 72

   56 factor: ID LPAREN . argument_list RPAREN

    NOT          shift, and go to state 38
    ID           shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    CONST_INT    shift, and go to state 43
    ADDOP        shift, and go to state 44
    LPAREN       shift, and go to state 46

    $default  reduce using rule 63 (argument_list)

    variable           go to state 67
    logic_expression   go to state 92
    rel_expression     go to state 59
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63
    argument_list      go to state 93
    arguments          go to state 94


State 73

   52 unary_expression: ADDOP unary_expression .

    $default  reduce using rule 52 (unary_expression)


State 74

   57 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 95


State 75

   33 statement: IF LPAREN . expression RPAREN statement
   34          | IF LPAREN . expression RPAREN statement ELSE statement

    NOT          shift, and go to state 38
    ID           shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    CONST_INT    shift, and go to state 43
    ADDOP        shift, and go to state 44
    LPAREN       shift, and go to state 46

    variable           go to state 56
    expression         go to state 96
    logic_expression   go to state 58
    rel_expression     go to state 59
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 76

   32 statement: FOR LPAREN . expression_statement expression_statement expression RPAREN statement

    NOT          shift, and go to state 38
    ID           shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    CONST_INT    shift, and go to state 43
    ADDOP        shift, and go to state 44
    SEMICOLON    shift, and go to state 45
    LPAREN       shift, and go to state 46

    expression_statement  go to state 97
    variable              go to state 56
    expression            go to state 57
    logic_expression      go to state 58
    rel_expression        go to state 59
    simple_expression     go to state 60
    term                  go to state 61
    unary_expression      go to state 62
    factor                go to state 63


State 77

   35 statement: WHILE LPAREN . expression RPAREN statement

    NOT          shift, and go to state 38
    ID           shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    CONST_INT    shift, and go to state 43
    ADDOP        shift, and go to state 44
    LPAREN       shift, and go to state 46

    variable           go to state 56
    expression         go to state 98
    logic_expression   go to state 58
    rel_expression     go to state 59
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 78

   25 declaration_list: ID .
   26                 | ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 15

    $default  reduce using rule 25 (declaration_list)


State 79

   16 compound_statement: LCURL $@1 statements RCURL .

    $default  reduce using rule 16 (compound_statement)


State 80

   28 statements: statements statement .

    $default  reduce using rule 28 (statements)


State 81

   61 factor: variable DECOP .

    $default  reduce using rule 61 (factor)


State 82

   60 factor: variable INCOP .

    $default  reduce using rule 60 (factor)


State 83

   43 expression: variable ASSIGNOP . logic_expression

    NOT          shift, and go to state 38
    ID           shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    CONST_INT    shift, and go to state 43
    ADDOP        shift, and go to state 44
    LPAREN       shift, and go to state 46

    variable           go to state 67
    logic_expression   go to state 99
    rel_expression     go to state 59
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 84

   39 expression_statement: expression SEMICOLON .

    $default  reduce using rule 39 (expression_statement)


State 85

   45 logic_expression: rel_expression LOGICOP . rel_expression

    NOT          shift, and go to state 38
    ID           shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    CONST_INT    shift, and go to state 43
    ADDOP        shift, and go to state 44
    LPAREN       shift, and go to state 46

    variable           go to state 67
    rel_expression     go to state 100
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 86

   49 simple_expression: simple_expression ADDOP . term

    NOT          shift, and go to state 38
    ID           shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    CONST_INT    shift, and go to state 43
    ADDOP        shift, and go to state 44
    LPAREN       shift, and go to state 46

    variable          go to state 67
    term              go to state 101
    unary_expression  go to state 62
    factor            go to state 63


State 87

   47 rel_expression: simple_expression RELOP . simple_expression

    NOT          shift, and go to state 38
    ID           shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    CONST_INT    shift, and go to state 43
    ADDOP        shift, and go to state 44
    LPAREN       shift, and go to state 46

    variable           go to state 67
    simple_expression  go to state 102
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 88

   51 term: term MULOP . unary_expression

    NOT          shift, and go to state 38
    ID           shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    CONST_INT    shift, and go to state 43
    ADDOP        shift, and go to state 44
    LPAREN       shift, and go to state 46

    variable          go to state 67
    unary_expression  go to state 103
    factor            go to state 63


State 89

   36 statement: PRINTLN LPAREN ID . RPAREN SEMICOLON

    RPAREN  shift, and go to state 104


State 90

   37 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 37 (statement)


State 91

   41 variable: ID LTHIRD expression . RTHIRD

    RTHIRD  shift, and go to state 105


State 92

   65 arguments: logic_expression .

    $default  reduce using rule 65 (arguments)


State 93

   56 factor: ID LPAREN argument_list . RPAREN

    RPAREN  shift, and go to state 106


State 94

   62 argument_list: arguments .
   64 arguments: arguments . COMMA logic_expression

    COMMA  shift, and go to state 107

    $default  reduce using rule 62 (argument_list)


State 95

   57 factor: LPAREN expression RPAREN .

    $default  reduce using rule 57 (factor)


State 96

   33 statement: IF LPAREN expression . RPAREN statement
   34          | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 108


State 97

   32 statement: FOR LPAREN expression_statement . expression_statement expression RPAREN statement

    NOT          shift, and go to state 38
    ID           shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    CONST_INT    shift, and go to state 43
    ADDOP        shift, and go to state 44
    SEMICOLON    shift, and go to state 45
    LPAREN       shift, and go to state 46

    expression_statement  go to state 109
    variable              go to state 56
    expression            go to state 57
    logic_expression      go to state 58
    rel_expression        go to state 59
    simple_expression     go to state 60
    term                  go to state 61
    unary_expression      go to state 62
    factor                go to state 63


State 98

   35 statement: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 110


State 99

   43 expression: variable ASSIGNOP logic_expression .

    $default  reduce using rule 43 (expression)


State 100

   45 logic_expression: rel_expression LOGICOP rel_expression .

    $default  reduce using rule 45 (logic_expression)


State 101

   49 simple_expression: simple_expression ADDOP term .
   51 term: term . MULOP unary_expression

    MULOP  shift, and go to state 88

    $default  reduce using rule 49 (simple_expression)


State 102

   47 rel_expression: simple_expression RELOP simple_expression .
   49 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 86

    $default  reduce using rule 47 (rel_expression)


State 103

   51 term: term MULOP unary_expression .

    $default  reduce using rule 51 (term)


State 104

   36 statement: PRINTLN LPAREN ID RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 111


State 105

   41 variable: ID LTHIRD expression RTHIRD .

    $default  reduce using rule 41 (variable)


State 106

   56 factor: ID LPAREN argument_list RPAREN .

    $default  reduce using rule 56 (factor)


State 107

   64 arguments: arguments COMMA . logic_expression

    NOT          shift, and go to state 38
    ID           shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    CONST_INT    shift, and go to state 43
    ADDOP        shift, and go to state 44
    LPAREN       shift, and go to state 46

    variable           go to state 67
    logic_expression   go to state 112
    rel_expression     go to state 59
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 108

   33 statement: IF LPAREN expression RPAREN . statement
   34          | IF LPAREN expression RPAREN . statement ELSE statement

    NOT          shift, and go to state 38
    PRINTLN      shift, and go to state 39
    RETURN       shift, and go to state 40
    ID           shift, and go to state 41
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    CONST_FLOAT  shift, and go to state 42
    CONST_INT    shift, and go to state 43
    ADDOP        shift, and go to state 44
    SEMICOLON    shift, and go to state 45
    LCURL        shift, and go to state 26
    LPAREN       shift, and go to state 46
    IF           shift, and go to state 47
    FOR          shift, and go to state 48
    WHILE        shift, and go to state 49

    compound_statement    go to state 50
    var_declaration       go to state 51
    type_specifier        go to state 52
    statement             go to state 113
    expression_statement  go to state 55
    variable              go to state 56
    expression            go to state 57
    logic_expression      go to state 58
    rel_expression        go to state 59
    simple_expression     go to state 60
    term                  go to state 61
    unary_expression      go to state 62
    factor                go to state 63


State 109

   32 statement: FOR LPAREN expression_statement expression_statement . expression RPAREN statement

    NOT          shift, and go to state 38
    ID           shift, and go to state 41
    CONST_FLOAT  shift, and go to state 42
    CONST_INT    shift, and go to state 43
    ADDOP        shift, and go to state 44
    LPAREN       shift, and go to state 46

    variable           go to state 56
    expression         go to state 114
    logic_expression   go to state 58
    rel_expression     go to state 59
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 110

   35 statement: WHILE LPAREN expression RPAREN . statement

    NOT          shift, and go to state 38
    PRINTLN      shift, and go to state 39
    RETURN       shift, and go to state 40
    ID           shift, and go to state 41
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    CONST_FLOAT  shift, and go to state 42
    CONST_INT    shift, and go to state 43
    ADDOP        shift, and go to state 44
    SEMICOLON    shift, and go to state 45
    LCURL        shift, and go to state 26
    LPAREN       shift, and go to state 46
    IF           shift, and go to state 47
    FOR          shift, and go to state 48
    WHILE        shift, and go to state 49

    compound_statement    go to state 50
    var_declaration       go to state 51
    type_specifier        go to state 52
    statement             go to state 115
    expression_statement  go to state 55
    variable              go to state 56
    expression            go to state 57
    logic_expression      go to state 58
    rel_expression        go to state 59
    simple_expression     go to state 60
    term                  go to state 61
    unary_expression      go to state 62
    factor                go to state 63


State 111

   36 statement: PRINTLN LPAREN ID RPAREN SEMICOLON .

    $default  reduce using rule 36 (statement)


State 112

   64 arguments: arguments COMMA logic_expression .

    $default  reduce using rule 64 (arguments)


State 113

   33 statement: IF LPAREN expression RPAREN statement .
   34          | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 116

    $default  reduce using rule 33 (statement)


State 114

   32 statement: FOR LPAREN expression_statement expression_statement expression . RPAREN statement

    RPAREN  shift, and go to state 117


State 115

   35 statement: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 35 (statement)


State 116

   34 statement: IF LPAREN expression RPAREN statement ELSE . statement

    NOT          shift, and go to state 38
    PRINTLN      shift, and go to state 39
    RETURN       shift, and go to state 40
    ID           shift, and go to state 41
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    CONST_FLOAT  shift, and go to state 42
    CONST_INT    shift, and go to state 43
    ADDOP        shift, and go to state 44
    SEMICOLON    shift, and go to state 45
    LCURL        shift, and go to state 26
    LPAREN       shift, and go to state 46
    IF           shift, and go to state 47
    FOR          shift, and go to state 48
    WHILE        shift, and go to state 49

    compound_statement    go to state 50
    var_declaration       go to state 51
    type_specifier        go to state 52
    statement             go to state 118
    expression_statement  go to state 55
    variable              go to state 56
    expression            go to state 57
    logic_expression      go to state 58
    rel_expression        go to state 59
    simple_expression     go to state 60
    term                  go to state 61
    unary_expression      go to state 62
    factor                go to state 63


State 117

   32 statement: FOR LPAREN expression_statement expression_statement expression RPAREN . statement

    NOT          shift, and go to state 38
    PRINTLN      shift, and go to state 39
    RETURN       shift, and go to state 40
    ID           shift, and go to state 41
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    CONST_FLOAT  shift, and go to state 42
    CONST_INT    shift, and go to state 43
    ADDOP        shift, and go to state 44
    SEMICOLON    shift, and go to state 45
    LCURL        shift, and go to state 26
    LPAREN       shift, and go to state 46
    IF           shift, and go to state 47
    FOR          shift, and go to state 48
    WHILE        shift, and go to state 49

    compound_statement    go to state 50
    var_declaration       go to state 51
    type_specifier        go to state 52
    statement             go to state 119
    expression_statement  go to state 55
    variable              go to state 56
    expression            go to state 57
    logic_expression      go to state 58
    rel_expression        go to state 59
    simple_expression     go to state 60
    term                  go to state 61
    unary_expression      go to state 62
    factor                go to state 63


State 118

   34 statement: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 34 (statement)


State 119

   32 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement .

    $default  reduce using rule 32 (statement)
